Basic Structure of the Online Learning Platform
1. Project Setup
Directory Structure:

online_learning_platform/
├── app.py
├── templates/
│   ├── base.html
│   ├── register.html
│   ├── login.html
│   ├── create_course.html
│   └── courses.html
├── static/
│   └── styles.css
└── requirements.txt


2. Install Required Packages
Create a requirements.txt file with the following content:
Flask
Flask-SQLAlchemy
Flask-WTF

Then, install the packages using:

pip install -r requirements.txt

3. Backend Code (app.py)
Here’s a simple Flask application that handles user registration, login, and course management:

from flask import Flask, render_template, request, redirect, url_for, flash
from flask_sqlalchemy import SQLAlchemy
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///site.db'
app.config['SECRET_KEY'] = 'your_secret_key'
db = SQLAlchemy(app)

# Database Models
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(150), unique=True, nullable=False)
    password = db.Column(db.String(150), nullable=False)

class Course(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(150), nullable=False)
    description = db.Column(db.Text, nullable=False)

# Routes
@app.route('/')
def home():
    return render_template('base.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        password = generate_password_hash(request.form['password'], method='sha256')
        new_user = User(username=username, password=password)
        db.session.add(new_user)
        db.session.commit()
        flash('Registration successful! Please log in.', 'success')
        return redirect(url_for('login'))
    return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        user = User.query.filter_by(username=username).first()
        if user and check_password_hash(user.password, password):
            flash('Login successful!', 'success')
            return redirect(url_for('create_course'))
        else:
            flash('Login failed. Check your credentials.', 'danger')
    return render_template('login.html')

@app.route('/create_course', methods=['GET', 'POST'])
def create_course():
    if request.method == 'POST':
        title = request.form['title']
        description = request.form['description']
        new_course = Course(title=title, description=description)
        db.session.add(new_course)
        db.session.commit()
        flash('Course created successfully!', 'success')
        return redirect(url_for('list_courses'))
    return render_template('create_course.html')

@app.route('/courses')
def list_courses():
    courses = Course.query.all()
    return render_template('courses.html', courses=courses)

if __name__ == '__main__':
    db.create_all()  # Create database tables
    app.run(debug=True)


4. Frontend Templates
base.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}">
    <title>Online Learning Platform</title>
</head>
<body>
    <nav>
        <a href="{{ url_for('home') }}">Home</a>
        <a href="{{ url_for('register') }}">Register</a>
        <a href="{{ url_for('login') }}">Login</a>
        <a href="{{ url_for('create_course') }}">Create Course</a>
        <a href="{{ url_for('list_courses') }}">Courses</a>
    </nav>
    <div class="container">
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                    <div class="alert alert-{{ category }}">{{ message }}</div>
                {% endfor %}
            {% endif %}
        {% endwith %}
        {% block content %}{% endblock %}
    </div>
</body>
</html>

register.html:

{% extends 'base.html' %}
{% block content %}
<h2>Register</h2>
<form method="POST">
    <input type="text" name="username" placeholder="Username" required>
    <input type="password" name="password" placeholder="Password" required>
    <button type="submit">Register</button>
</form>
{% endblock %}

login.html:

{% extends 'base.html' %}
{% block content %}
<h2>Login</h2>
<form method="POST">
    <input type="text" name="username" placeholder="Username" required>
    <input type="password" name="password" placeholder="Password" required>
    <button type="submit">Login</button>
</form>
{% endblock %}

create_course.html:

{% extends 'base.html' %}
{% block content %}
<h2>Create Course</h2>
<form method="POST">
    <input type="text" name="title" placeholder="Course Title" required>
    <textarea name="description" placeholder="Course Description" required></textarea>
    <button type="submit">Create Course</button>
</form>
{% endblock %}

courses.html:
{% extends 'base.html' %}
{% block content %}
<h2>Available Courses</h2>
<ul>
    {% for course in courses %}
        <li><strong>{{ course.title }}</strong>: {{ course.description }}</li>
    {% endfor %}
</ul>
{% endblock %}

5. Styling (styles.css)
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

nav {
    background-color: #333;
    color: white;
    padding: 10px;
}

nav a {
    color: white;
    margin: 0 15px;
    text-decoration: none;
}

.container {
    padding: 20px;
}

.alert {
    padding: 10px;
    margin: 10px 0;
}

.alert-success {
    background-color: #d4edda;
    color: #155724;
}

.alert-danger {
    background-color: #f8d7da;
    color: #721c24;
}



